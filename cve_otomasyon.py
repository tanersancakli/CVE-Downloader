print("""
 ___________________
< CVE-Downloader   >
<                >
<    \   ^__^      >
<     \  (oo)\_______>
<        (__)\       )\/\>
<            ||----w |
<            ||     ||
        Taner Sancakli
""")

import os
import requests
import openpyxl
from openpyxl import Workbook
import pandas as pd
import json

# Kullanıcının masaüstü dizini
desktop_path = os.path.join(os.path.expanduser('~'), 'Desktop')

# Excel dosyasının tam yolu
EXCEL_FILE_NAME = os.path.join(desktop_path, "CVE_Data.xlsx")

# Konfigürasyon dosyasını yükle
with open("config.json", "r") as config_file:
    config = json.load(config_file)

BASE_URL = config["api_url"]

def fetch_cve_data():
    """
    NVD API'si üzerinden CVE verilerini alır ve JSON formatında döndürür.
    :return: JSON formatında CVE verileri
    """
    try:
        response = requests.get(f"{BASE_URL}?resultsPerPage=2000&startIndex=0")
        response.raise_for_status()  # HTTP hata durumlarını kontrol et
        return response.json()
    except requests.exceptions.RequestException as e:
        print("Hata oluştu. HTTP hata:", e)
        return None
    except Exception as e:
        print("Bir hata oluştu:", e)
        return None

def get_new_cves(existing_cves, cve_list):
    """
    Var olan CVE kayıtlarını ve yeni CVE kayıtlarını karşılaştırarak yeni kayıtları döndürür.
    :param existing_cves: Var olan CVE kayıtlarının kümesi
    :param cve_list: Tüm CVE kayıtlarını içeren liste
    :return: Yeni CVE kayıtlarının listesi
    """
    return [cve for cve in cve_list if cve.get("CVE ID") not in existing_cves]

def main():
    """
    Ana işlem işlevi - CVE verilerini alır, karşılaştırır ve Excel dosyasına ekler.
    """
    cve_data = fetch_cve_data()

    if not cve_data:
        return

    cve_list = cve_data.get("result", {}).get("CVE_Items", [])
    df = pd.DataFrame([{
        "CVE ID": cve.get("cve", {}).get("CVE_data_meta", {}).get("ID", ""),
        "Description": cve.get("cve", {}).get("description", {}).get("description_data", [])[0].get("value", "")
    } for cve in cve_list])

    try:
        wb = openpyxl.load_workbook(EXCEL_FILE_NAME)
        sheet = wb.active
    except FileNotFoundError:
        wb = Workbook()
        sheet = wb.active
        sheet.append(["CVE ID", "Description"])

    existing_cves = {cve[0] for cve in sheet.iter_rows(min_row=2, max_row=sheet.max_row, values_only=True)}
    new_cves = get_new_cves(existing_cves, df.to_dict(orient="records"))

    for cve in new_cves:
        sheet.append([cve["CVE ID"], cve["Description"]])

    try:
        wb.save(EXCEL_FILE_NAME)
        print(f"{len(new_cves)} yeni CVE kaydı Excel dosyasına eklendi.")
    except PermissionError as e:
        print("Dosya kaydetme hatası:", e)

if __name__ == "__main__":
    main()
